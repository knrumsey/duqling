% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_emulator_functions.R
\name{get_emulator_functions}
\alias{get_emulator_functions}
\title{Access fit/predict functions for emulators}
\usage{
get_emulator_functions(methods)
}
\arguments{
\item{methods}{Character vector of method names. Must be drawn from the
set of emulator methods implemented in the \pkg{duqling} paper comparison, e.g.
\code{"bass"}, \code{"bart"}, \code{"bppr"}, \code{"blm"},
\code{"bcart"}, \code{"btreelm"}, \code{"spce"}, \code{"apce"},
\code{"confrf"}, \code{"fitcgp"}, \code{"rffgp"}, \code{"lagp"},
\code{"alcgp"}, \code{"mpgp"}, \code{"svecgp"}, \code{"bnn"},
\code{"tbass"}, \code{"qbass"}, \code{"rvm"}, \code{"ngboost"},
\code{"blasso"}, \code{"gp"}, \code{"deepgp"}, \code{"treegp"},
\code{"hetgp"}, \code{"bootrf"}, \code{"bcmgp"}, \code{"rgasp"},
\code{"baseline"}.}
}
\value{
If \code{methods} has length 1, a list with two components:
\describe{
  \item{\code{fit_func}}{The fitting function (e.g. `fit_bass`).}
  \item{\code{pred_func}}{The prediction function (e.g. `pred_bass`).}
}
If `methods` has length greater than 1, a list with two components:
\describe{
  \item{\code{fit_func}}{A named list of fit functions, keyed by method name.}
  \item{\code{pred_func}}{A named list of prediction functions, keyed by method name.}
}
This uniform structure allows both single and multiple method cases
to be passed directly to [run_sim_study()], e.g.
\preformatted{
emus <- get_emulator_functions("bass")
run_sim_study(emus$fit_func, emus$pred_func)

emus <- get_emulator_functions(c("bass", "bart"))
run_sim_study(emus$fit_func, emus$pred_func)
}
}
\description{
Provides a consistent interface for retrieving the \code{fit_*} and \code{pred_*}
functions for one or more emulator methods supported in \pkg{duqling}.
This allows downstream code (e.g., \code{run_sim_study()}) to use emulators
without attaching all their required packages as dependencies.
}
\details{
Each emulator method is implemented via a pair of functions
\code{fit_<method>} and \code{pred_<method>}. These are defined in \pkg{duqling}
but may require additional packages to be installed. This accessor
checks for package availability using [requireNamespace()], and will
raise an error if required packages are missing.

The list of required packages is documented in the source code. For
example:
\itemize{
  \item `"bass"` requires \pkg{BASS}
  \item `"bart"` requires \pkg{BART}
  \item `"bcart"`, `"btreelm"`, `"treegp"` require \pkg{tgp}
  \item `"rgasp"` requires \pkg{RobustGaSP}
  \item `"gp"` requires \pkg{hetGP}
  \item `"deepgp"` requires \pkg{deepgp}
  \item etc.
}

Note: emulators based on \pkg{tgp} (e.g. \code{"bcart"}, \code{"btreelm"},
\code{"treegp"}) are \strong{not compatible} with the \code{mc_cores} argument
for parallelization, due to limitations in that package. Using them in
parallel contexts may cause errors.
}
\examples{
\dontrun{
# Single emulator
emu <- get_emulator_functions("bass")
str(emu)

# Multiple emulators
emus <- get_emulator_functions(c("bass", "bart"))
str(emus$fit_func)
str(emus$pred_func)
}

}
