% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_sim_study.R
\name{run_sim_study}
\alias{run_sim_study}
\title{Reproducible Simulation Study (Test Functions)}
\usage{
run_sim_study(
  fit_func,
  pred_func = NULL,
  fnames = NULL,
  conf_level = c(0.8, 0.9, 0.95, 0.99),
  score = TRUE,
  n_train = 100,
  n_test = 1000,
  NSR = 0,
  design_type = "LHS",
  replications = 1,
  seed = 42,
  method_names = NULL,
  mc_cores = 1,
  verbose = TRUE
)
}
\arguments{
\item{fit_func}{If \code{pred_func} is specified, the \code{fit_func} should take two arguments called \code{X_train} and \code{y_train}, and should return an object which will be passed to \code{pred_func}. If \code{pred_func} is NOT specified, then \code{fit_func} should take a third argument called \code{X_test}, and should return predictive samples (see pred_func documentation).}

\item{pred_func}{A function taking two arguments: (i) the object returned by \code{fit_func} and a matrix \code{X_test}. The function should return an matrix of samples from the predictive distribution, with one column per test point. For additional flexibility, see the details below.}

\item{fnames}{A vector of function names from the \code{duqling} package. See \code{quack()} for details.}

\item{conf_level}{A vector of confidence levels.}

\item{score}{Logical. Should CRPS be computed?}

\item{n_train}{the sample size (or vector of sample sizes) for each training set}

\item{n_test}{the sample size for each testing set}

\item{NSR}{the noise to signal ratio (inverse of the more-standard signal to noise ratio).}

\item{design_type}{How should the training and testing designs be generated? Options are "LHS", "grid" and "random"}

\item{replications}{How many replications should be repeated for each data set?}

\item{seed}{Seed for random number generators. For reproducibility, we discourage the use of this argument.}

\item{method_names}{A vector of method names, length equal to \code{length(fit_func)}. If NULL, the indexed names \code{my_method<i>} will be used.}

\item{mc_cores}{How many cores to use for parallelization over replications.}

\item{verbose}{should progress be reported?}
}
\value{
See details
}
\description{
Reproducible code for simulation studies.
}
\details{
Code to conduct a reproducible simulation study to compare emulators. By reporting the parameters to the study, other authors can compare their results directly.
Only \code{fit_func} needs to be specified, but only the total time will be reported. The simplest (and recommended) approach is that the \code{fit_func} (or \code{pred_func}) should return a matrix of posterior samples, with one column per test point (e.g., per row in \code{X_test}). Any number of rows (predictive samples) is allowed. In this case, the mean of the samples is used as a prediction and the R \code{quantile} function is used to construct confidence intervals. This default behavior can be changed by instead allowing \code{fit_func} (or \code{pred_func}) to return a named list with fields i) \code{samples} (required), ii) \code{preds} (optional; a vector of predictions), and iii) intervals (optional; a 2 by n by k array of interval bounds where n is the number of test points and k is \code{length(conf_level)}).
}
\examples{

# METHOD 1: Linear Regression
lm_fit <- function(X, y){
  lm(y~X)
}
lm_pred <- function(obj, Xt){
  nt <- nrow(Xt)
  mean_pred <- predict(obj, data.frame(Xt))
  sigma_est <- sd(residuals(obj))
  preds <- replicate(1000, mean_pred + rnorm(nt, 0, sigma_est))
}

# METHOD 2: Projection Pursuit
ppr_fit <- function(X, y){
  ppr(X, y, nterms=3)
}
ppr_pred <- function(obj, Xt){
  nt <- nrow(Xt)
  mean_pred <- predict(obj, data.frame(Xt))
  sigma_est <- sd(residuals(obj))
  preds <- replicate(1000, mean_pred + rnorm(nt, 0, sigma_est))
}

my_fit  <- list(lm_fit, ppr_fit)
my_pred <- list(lm_pred, ppr_pred)
run_sim_study(my_fit, my_pred,
             fnames=c("dms_additive", "borehole"),
             n_train=50,
             replications=2,
             method_names=c("lm", "ppr") # Optional
             )

}
\references{
Surjanovic, Sonja, and Derek Bingham. "Virtual library of simulation experiments: test functions and datasets." Simon Fraser University, Burnaby, BC, Canada, accessed May 13 (2013): 2015.
}
