% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_sim_study.R
\name{run_sim_study}
\alias{run_sim_study}
\title{Reproducible Simulation Study}
\usage{
run_sim_study(
  my_fit,
  my_pred = NULL,
  fnames = quack(input_dims = 1)$fname,
  interval = TRUE,
  n_train = 100,
  n_test = 10000,
  NSR = 0,
  design_type = "LHS",
  replications = 1,
  seed = 42,
  conf_level = 0.95,
  method_names = NULL,
  mc_cores = 1,
  verbose = TRUE
)
}
\arguments{
\item{my_fit}{If \code{my_pred} is specified, then \code{my_fit} should take two arguments called \code{X_train} and \code{y_train}, and should return a fitted model object which will be passed to \code{my_pred}. Otherwise, \code{my_fit} should take a third and fourth argument, \code{X_test, conf_level}, and should return predictions as specified below.}

\item{my_pred}{A function taking three arguments, the object returned by \code{my_fit}, \code{X_test} and a confidence level \code{alpha} (if coverage is a desired metric, \code{interval = TRUE}). If coverage is to be computed, \code{my_pred} should return a matrix with columns names c("preds", "lb", "ub"). Otherwise, it should return a vector of predictions.}

\item{fnames}{A vector of function names from the \code{duqling} package. See \code{quack()} for details.}

\item{interval}{Do we track interval estimates (or just point estimates)?}

\item{n_train}{the sample size (or vector of sample sizes) for each training set}

\item{n_test}{the sample size for each testing set}

\item{NSR}{the noise to signal ratio (inverse of the more-standard signal to noise ratio).}

\item{design_type}{How should the training and testing designs be generated? Options are "LHS", "grid" and "random"}

\item{replications}{How many replications should be repeated for each data set?}

\item{seed}{Seed for random number generators. For reproducibility, we discourage the use of this argument.}

\item{conf_level}{Confidence level for interval estimates. If \code{length(conf_level) > 1}, then \code{my_pred} should return a matrix with \code{1 + 2*length(conf_level)} columns, with 2 columns of lower and upper bounds for each value in \code{conf_}}

\item{method_names}{A vector of method names, length equal to \code{length(my_fit)}. If NULL, the indexed names \code{my_method<i>} will be used.}

\item{mc_cores}{How many cores to use for parallelization over replications.}

\item{verbose}{should progress be reported?}
}
\value{
See details
}
\description{
Reproducible code for simulation studies.
}
\details{
Code to conduct a reproducible simulation study to compare emulators. By reporting the parameters to the study, other authors can compare their results directly.
}
\examples{
library(BASS)

my_fit <- function(X, y){
  bass(X, y, g1=0.001, g2=0.001)
}

my_pred <- function(obj, Xt, conf_level=0.95){
  alpha <- 1 - conf_level
  preds <- predict(obj, Xt)
  yhat <- apply(preds, 2, mean)
  sd <- sqrt(apply(preds, 2, var) + mean(obj$s2))
  res <- cbind(yhat, yhat-2*sd, yhat + 2*sd)
  return(res)
}

run_sim_study(my_fit, my_pred,
   fnames=get_sim_functions_tiny(),
   n_train=50)
}
\references{
Surjanovic, Sonja, and Derek Bingham. "Virtual library of simulation experiments: test functions and datasets." Simon Fraser University, Burnaby, BC, Canada, accessed May 13 (2013): 2015.
}
